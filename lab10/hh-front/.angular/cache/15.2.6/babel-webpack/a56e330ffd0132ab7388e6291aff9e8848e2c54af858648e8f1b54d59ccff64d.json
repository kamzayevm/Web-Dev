{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class VacancyService {\n  constructor(http) {\n    this.http = http;\n    this.BASE_URL = 'http://localhost:8000';\n  }\n  getCompanyVacancies(id) {\n    return this.http.get(`${this.BASE_URL}/companies/${id}/vacancies`);\n  }\n  getVacancies() {\n    return this.http.get(`${this.BASE_URL}/vacancies/`);\n  }\n  getVacancy(id) {\n    return this.http.get(`${this.BASE_URL}/vacancies/${id}`);\n  }\n}\nVacancyService.ɵfac = function VacancyService_Factory(t) {\n  return new (t || VacancyService)(i0.ɵɵinject(i1.HttpClient));\n};\nVacancyService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: VacancyService,\n  factory: VacancyService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;AASA,OAAM,MAAOA,cAAc;EAIzBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAFxB,aAAQ,GAAG,uBAAuB;EAEM;EAExCC,mBAAmB,CAACC,EAAU;IAC5B,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAY,GAAG,IAAI,CAACC,QAAQ,cAAcF,EAAE,YAAY,CAAC;EAC/E;EAEAG,YAAY;IACV,OAAO,IAAI,CAACL,IAAI,CAACG,GAAG,CAAY,GAAG,IAAI,CAACC,QAAQ,aAAa,CAAC;EAChE;EAEAE,UAAU,CAACJ,EAAU;IACnB,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAU,GAAG,IAAI,CAACC,QAAQ,cAAcF,EAAE,EAAE,CAAC;EACnE;;AAhBWJ,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;SAAdA,cAAc;EAAAS,SAAdT,cAAc;EAAAU,YAFb;AAAM","names":["VacancyService","constructor","http","getCompanyVacancies","id","get","BASE_URL","getVacancies","getVacancy","factory","providedIn"],"sourceRoot":"","sources":["D:\\WebDev\\lab10\\hh-front\\src\\app\\services\\vacancy.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs/internal/Observable';\n\nimport { Vacancy } from '../models/models';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class VacancyService {\n  \n  BASE_URL = 'http://localhost:8000';\n\n  constructor(private http: HttpClient) { }\n\n  getCompanyVacancies(id: number): Observable<Vacancy[]> {\n    return this.http.get<Vacancy[]>(`${this.BASE_URL}/companies/${id}/vacancies`)\n  }\n\n  getVacancies(): Observable<Vacancy[]> {\n    return this.http.get<Vacancy[]>(`${this.BASE_URL}/vacancies/`)\n  }\n\n  getVacancy(id: number): Observable<Vacancy> {\n    return this.http.get<Vacancy>(`${this.BASE_URL}/vacancies/${id}`)\n  }\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}